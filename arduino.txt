#include <ESP8266WiFi.h>
#include <Firebase_ESP_Client.h>
#include <SoftwareSerial.h>
#include <TinyGPS++.h>

// Provide the token generation process info.
#include "addons/TokenHelper.h"
// Provide the RTDB payload printing info and other helper functions.
#include "addons/RTDBHelper.h"

// WiFi Credentials
#define WIFI_SSID "Sabarinath"
#define WIFI_PASSWORD "ambadiappoos"

// Firebase Credentials
#define API_KEY "AIzaSyBXBwLbuYU4PUfi3tmDH6-51bvbOwAAQc8"
#define DATABASE_URL "https://findmyroute-2156b-default-rtdb.asia-southeast1.firebasedatabase.app"

#define USER_EMAIL "findmyroute@gmail.com"
#define USER_PASSWORD "route@321"

// GPS Module Pins
#define RX_PIN 13  // ESP8266 RX (D7)
#define TX_PIN 15  // ESP8266 TX (D8)
#define GPS_BAUD 9600

TinyGPSPlus gps;
SoftwareSerial gpsSerial(RX_PIN, TX_PIN);
FirebaseData fbdo;
FirebaseAuth auth;
FirebaseConfig config;

void setup() {
  Serial.begin(115200);
  gpsSerial.begin(GPS_BAUD);

  // Connect to WiFi
  Serial.print("Connecting to WiFi...");
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(1000);
  }
  Serial.println("Connected!");

  // Configure Firebase
  config.api_key = API_KEY;
  config.database_url = DATABASE_URL;

  // Set user authentication
  auth.user.email = USER_EMAIL;
  auth.user.password = USER_PASSWORD;

  // Assign token callback
  config.token_status_callback = tokenStatusCallback;

  // Initialize Firebase
  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);

  Serial.println("GPS Module Started");
}

void loop() {
  while (gpsSerial.available()) {
    char c = gpsSerial.read();
    gps.encode(c);
  }

  if (gps.location.isUpdated()) {
    Serial.println("\n‚úÖ GPS Data Updated!");

    float latitude = gps.location.lat();
    float longitude = gps.location.lng();
    int satellites = gps.satellites.value();
    
    // Format Date & Time
    char dateTime[20];
    sprintf(dateTime, "%02d/%02d/%04d %02d:%02d:%02d",
            gps.date.day(), gps.date.month(), gps.date.year(),
            gps.time.hour(), gps.time.minute(), gps.time.second());

    // Print GPS Data
    Serial.print("LAT: "); Serial.println(latitude, 6);
    Serial.print("LONG: "); Serial.println(longitude, 6);
    Serial.print("SATELLITES: "); Serial.println(satellites);
    Serial.print("DATE & TIME (UTC): "); Serial.println(dateTime);

    // Send data to Firebase
    if (Firebase.RTDB.setFloat(&fbdo, "/device_1/gps_module/latitude", latitude) &&
        Firebase.RTDB.setFloat(&fbdo, "/device_1/gps_module/longitude", longitude) &&
        Firebase.RTDB.setString(&fbdo, "/device_1/gps_module/updated_at", dateTime)) {
      Serial.println("üì° Data sent to Firebase!");
    } else {
      Serial.print("‚ùå Failed: ");
      Serial.println(fbdo.errorReason());
    }

    delay(500); // Avoid flooding Firebase
  }
}
